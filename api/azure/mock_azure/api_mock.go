// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/web-platform-tests/wpt.fyi/api/azure (interfaces: API)
//
// Generated by this command:
//
//	mockgen -build_flags=--mod=mod -destination mock_azure/api_mock.go github.com/web-platform-tests/wpt.fyi/api/azure API
//

// Package mock_azure is a generated GoMock package.
package mock_azure

import (
	reflect "reflect"

	azure "github.com/web-platform-tests/wpt.fyi/api/azure"
	gomock "go.uber.org/mock/gomock"
)

// MockAPI is a mock of API interface.
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
	isgomock struct{}
}

// MockAPIMockRecorder is the mock recorder for MockAPI.
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance.
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// GetAzureArtifactsURL mocks base method.
func (m *MockAPI) GetAzureArtifactsURL(owner, repo string, buildID int64) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAzureArtifactsURL", owner, repo, buildID)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAzureArtifactsURL indicates an expected call of GetAzureArtifactsURL.
func (mr *MockAPIMockRecorder) GetAzureArtifactsURL(owner, repo, buildID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAzureArtifactsURL", reflect.TypeOf((*MockAPI)(nil).GetAzureArtifactsURL), owner, repo, buildID)
}

// GetBuild mocks base method.
func (m *MockAPI) GetBuild(owner, repo string, buildID int64) (*azure.Build, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBuild", owner, repo, buildID)
	ret0, _ := ret[0].(*azure.Build)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBuild indicates an expected call of GetBuild.
func (mr *MockAPIMockRecorder) GetBuild(owner, repo, buildID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBuild", reflect.TypeOf((*MockAPI)(nil).GetBuild), owner, repo, buildID)
}

// GetBuildURL mocks base method.
func (m *MockAPI) GetBuildURL(owner, repo string, buildID int64) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBuildURL", owner, repo, buildID)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBuildURL indicates an expected call of GetBuildURL.
func (mr *MockAPIMockRecorder) GetBuildURL(owner, repo, buildID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBuildURL", reflect.TypeOf((*MockAPI)(nil).GetBuildURL), owner, repo, buildID)
}
