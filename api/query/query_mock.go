// Code generated by MockGen. DO NOT EDIT.
// Source: query.go

// Package query is a generated GoMock package.
package query

import (
	gomock "github.com/golang/mock/gomock"
	shared "github.com/web-platform-tests/wpt.fyi/shared"
	http "net/http"
	reflect "reflect"
)

// MocksharedInterface is a mock of sharedInterface interface
type MocksharedInterface struct {
	ctrl     *gomock.Controller
	recorder *MocksharedInterfaceMockRecorder
}

// MocksharedInterfaceMockRecorder is the mock recorder for MocksharedInterface
type MocksharedInterfaceMockRecorder struct {
	mock *MocksharedInterface
}

// NewMocksharedInterface creates a new mock instance
func NewMocksharedInterface(ctrl *gomock.Controller) *MocksharedInterface {
	mock := &MocksharedInterface{ctrl: ctrl}
	mock.recorder = &MocksharedInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MocksharedInterface) EXPECT() *MocksharedInterfaceMockRecorder {
	return m.recorder
}

// ParseQueryParamInt mocks base method
func (m *MocksharedInterface) ParseQueryParamInt(r *http.Request, key string) (*int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseQueryParamInt", r, key)
	ret0, _ := ret[0].(*int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseQueryParamInt indicates an expected call of ParseQueryParamInt
func (mr *MocksharedInterfaceMockRecorder) ParseQueryParamInt(r, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseQueryParamInt", reflect.TypeOf((*MocksharedInterface)(nil).ParseQueryParamInt), r, key)
}

// ParseQueryFilterParams mocks base method
func (m *MocksharedInterface) ParseQueryFilterParams(arg0 *http.Request) (shared.QueryFilter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseQueryFilterParams", arg0)
	ret0, _ := ret[0].(shared.QueryFilter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseQueryFilterParams indicates an expected call of ParseQueryFilterParams
func (mr *MocksharedInterfaceMockRecorder) ParseQueryFilterParams(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseQueryFilterParams", reflect.TypeOf((*MocksharedInterface)(nil).ParseQueryFilterParams), arg0)
}
