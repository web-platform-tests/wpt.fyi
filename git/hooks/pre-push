#!/bin/bash

HOOKS_DIR=$(dirname "$0")
REPO_DIR="${HOOKS_DIR}/../.."
source "${REPO_DIR}/util/logging.sh"
source "${REPO_DIR}/util/path.sh"
source "${REPO_DIR}/util/commands.sh"
WPTD_PATH=${WPTD_PATH:-$(absdir "${REPO_DIR}")}

info "Checking where we're pushing..."
IS_MASTER="false"
while read local_ref local_sha remote_ref remote_sha
do
  debug "$local_ref $local_sha $remote_ref $remote_sha"
  if [[ -n "$remote_ref" ]];
  then
    if [[ "$(echo $remote_ref | sed -e 's,.*/\(.*\),\1,')" == "master" ]]
    then
      IS_MASTER="true"
    fi
  fi
done

if [[ "${IS_MASTER}" == "true" ]]
then
  confirm "Are you sure you want to push master?" || fatal "User cancelled the push"
fi

# Check for uncommitted changes.
info "Checking for uncommitted changes..."
! git diff . 2>&1 | read > /dev/null 2>&1
DIFF_STATUS="${?}"
if [ "${DIFF_STATUS}" != "0" ]; then
  confirm "You have uncommitted local changes. Push committed changes anyway?" \
      || fatal "User cancelled the push"
fi

info "Running pre-push checks in docker..."
docker inspect wptd-dev-instance > /dev/null 2>&1
INSPECT_STATUS="${?}"

DOCKER_INSTANCE_PID=""
if [ "${INSPECT_STATUS}" != "0" ]; then
  info "Docker instance wptd-dev-instance not found. Starting it..."
  docker run -t -d --entrypoint /bin/bash \
      -v "${WPTD_PATH}":/home/jenkins/wpt.fyi \
      -u $(id -u $USER):$(id -g $USER) \
      --name wptd-dev-instance wptd-dev &
  DOCKER_INSTANCE_PID="${!}"
else
  info "Found existing docker instance wptd-dev-instance"
fi
# Ensure rights.
wptd_chown "/home/jenkins"

docker exec -t -u $(id -u $USER):$(id -g $USER) wptd-dev-instance make prepush
LINT_STATUS="${?}"
FINAL_STATUS="${LINT_STATUS}"
if [ "${LINT_STATUS}" != "0" ]; then
  confirm "Lint failed. Push anyway?" || fatal "User cancelled the push"
  info "Pushing in spite of lint errors..."
  FINAL_STATUS="0"
fi

if [ "${DOCKER_INSTANCE_PID}" != "" ]; then
  kill "${DOCKER_INSTANCE_PID}"
fi

if [ "${FINAL_STATUS}" == "0" ]; then
  info "Pre-push exit status: ${FINAL_STATUS}"
else
  error "Pre-push exit status: ${FINAL_STATUS}"
fi

exit "${FINAL_STATUS}"
