// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/web-platform-tests/wpt.fyi/shared (interfaces: GitHubUtil)

// Package sharedtest is a generated GoMock package.
package sharedtest

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGitHubUtil is a mock of GitHubUtil interface
type MockGitHubUtil struct {
	ctrl     *gomock.Controller
	recorder *MockGitHubUtilMockRecorder
}

// MockGitHubUtilMockRecorder is the mock recorder for MockGitHubUtil
type MockGitHubUtilMockRecorder struct {
	mock *MockGitHubUtil
}

// NewMockGitHubUtil creates a new mock instance
func NewMockGitHubUtil(ctrl *gomock.Controller) *MockGitHubUtil {
	mock := &MockGitHubUtil{ctrl: ctrl}
	mock.recorder = &MockGitHubUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGitHubUtil) EXPECT() *MockGitHubUtilMockRecorder {
	return m.recorder
}

// GetWPTMetadataMasterSHA mocks base method
func (m *MockGitHubUtil) GetWPTMetadataMasterSHA() (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWPTMetadataMasterSHA")
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWPTMetadataMasterSHA indicates an expected call of GetWPTMetadataMasterSHA
func (mr *MockGitHubUtilMockRecorder) GetWPTMetadataMasterSHA() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWPTMetadataMasterSHA", reflect.TypeOf((*MockGitHubUtil)(nil).GetWPTMetadataMasterSHA))
}
